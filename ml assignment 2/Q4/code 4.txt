# -*- coding: utf-8 -*-
"""
Created on Sun Jan 19 19:01:53 2020

@author: Hewlet Packard
"""

# -*- coding: utf-8 -*-
"""
Created on Sun Dec 22 15:10:20 2019

@author: Hewlet Packard
"""

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
dataset=pd.read_csv("housing price.csv")
x=dataset.iloc[:,:1].values
y=dataset.iloc[:,-1].values
from sklearn.model_selection import train_test_split
x_train,x_test,y_train,y_test=train_test_split(x,y,test_size=1/3)
from sklearn.linear_model import LinearRegression
regression=LinearRegression()
regression.fit(x_train,y_train)
plt.scatter(x_train,y_train,color='red')
plt.plot(x_train,regression.predict(x_train),color='blue')
plt.title('(training set)')
plt.xlabel('house id')
plt.ylabel('price')
plt.show()


plt.scatter(x_test, y_test, color = 'red')
plt.plot(x_train, regression.predict(x_train), color = 'blue')
plt.title('(Test set)')
plt.xlabel('house  id')
plt.ylabel('price')
plt.show()

print(regression.predict([[3000]]))

#errors

from sklearn import metrics 
print('Mean Absolute Error:', metrics.mean_absolute_error(y_test, regression.predict(x_test))) 
print('Mean Squared Error:', metrics.mean_squared_error(y_test, regression.predict(x_test)))
print('Root Mean Squared Error:', np.sqrt(metrics.mean_squared_error(y_test, regression.predict(x_test))))